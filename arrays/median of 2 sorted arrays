
https://leetcode.com/problems/median-of-two-sorted-arrays/

TC: O(log(min(n,m))
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        if(nums2.size()<nums1.size()) {
            return findMedianSortedArrays(nums2,nums1);
        }
        int n1=nums1.size();
        int n2=nums2.size();
        int half=(n1+n2+1)/2;
        int l=0;
        int r=n1;
        while(l<=r){
           int i= (l+r)/2;
            int j=half-i;
            int Aleft = (i==0)?INT_MIN:nums1[i-1];
            int Aright= (i==n1)?INT_MAX:nums1[i];
            int Bleft = (j==0)?INT_MIN:nums1[j-1];
            int Bright= (j==n2)?INT_MAX:nums2[j];
           // if partition is correct
            if(Aleft<=Bright && Bleft<=Aright) {
                if((n1+n2)%2==0) return (max(Aleft,Bleft) + min(Aright,Bright))/2.0;
                else return max(Aleft,Bleft);
            }
            else if (Aleft>Bright) {r=i-1;
            }
            else {l=i+1;
                 }
        }
        return 0.0;
    }
};
